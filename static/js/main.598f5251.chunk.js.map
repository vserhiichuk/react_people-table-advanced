{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","utils/variablesHelpers.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/ErrorComponent/ErrorComponent.tsx","components/EmptyComponent/EmptyComponent.tsx","components/PersonLink/PersonLink.tsx","components/PersonComponent/PersonComponent.tsx","components/SortComponent/SortComponent.tsx","components/PeopleComponent/PeopleComponent.tsx","api.ts","components/EmptySearch/EmptySearch.tsx","types/SortType.ts","utils/getPreparedPeople.tsx","utils/getSortedPeople.ts","components/pages/PeoplePage.tsx","utils/PeopleHelpers.ts","components/pages/HomePage.tsx","components/pages/ErrorPage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","paramsToUpdate","currentParams","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","CENTURIES","SORT_PEOPLE","SEX_FILTERS","label","PeopleFilters","setSearchParams","query","get","sex","centuries","getAll","className","map","sexCategory","Fragment","cn","type","placeholder","onChange","event","setSearchWith","target","century","includes","filter","currCentury","length","Loader","ErrorComponent","errorMessage","EmptyComponent","PersonLink","person","slug","name","PersonComponent","useParams","born","died","mother","motherName","father","fatherName","SortComponent","sort","order","getSortParams","category","preparedCategory","toLowerCase","PeopleComponent","people","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","EmptySearch","SortType","getPreparedPeople","preparedPeople","preparedQuery","filterByName","filterByMother","filterByFather","personCentury","Math","floor","sortPreparedPeople","prepared","visiblePeople","Name","a","b","localeCompare","Sex","Born","Died","reverse","getSortPreparedPeople","PeoplePage","useState","setPeople","isLoading","setIsLoading","setErrorMessage","useEffect","getPeople","find","getPreparedPeopleAPI","catch","finally","isDisplayErrorMessage","isNoPeopleOnServer","isPeopleOnServer","HomePage","ErrorPage","Navbar","getLinkClass","isActive","role","pathname","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"yRAIO,SAASA,EACdC,EACAC,GAEA,IAAMC,EAAY,IAAIC,gBACpBF,EAAcG,YAkBhB,OAfAC,OAAOC,QAAQN,GACZO,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACX,OAAVA,EACFP,EAAUQ,OAAOF,GACRG,MAAMC,QAAQH,IACvBP,EAAUQ,OAAOF,GAEjBC,EAAMF,SAAQ,SAAAM,GACZX,EAAUY,OAAON,EAAKK,EACvB,KAEDX,EAAUa,IAAIP,EAAKC,EAEtB,IAEIP,EAAUE,UAClB,C,mDCrBYY,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACGC,EACC,iBACJ,EAAuBC,cAAhBC,EAAP,oBAEA,OACE,cAAC,IAAD,yBACEC,GAAI,CACFC,OAAQxB,EAAcmB,EAAQG,KAE5BF,GAJN,aAMGF,IAGN,ECtBYO,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,MAErCC,EAAc,CACzB,OACA,MACA,OACA,QAGWC,EAAc,CACzB,CAAEC,MAAO,MAAOlB,MAAO,MACvB,CAAEkB,MAAO,OAAQlB,MAAO,KACxB,CAAEkB,MAAO,SAAUlB,MAAO,MCNfmB,EAAgB,WAC3B,MAAwCR,cAAxC,mBAAOC,EAAP,KAAqBQ,EAArB,KAEMC,EAAQT,EAAaU,IAAI,UAAY,GACrCC,EAAMX,EAAaU,IAAI,QAAU,KACjCE,EAAYZ,EAAaa,OAAO,cAAgB,GAYtD,OACE,sBAAKC,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,mBAAGA,UAAU,aAAa,UAAQ,YAAlC,SACGT,EAAYU,KAAI,SAACC,GAAD,OACf,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,CACEH,UAAWI,IAAG,CACZ,YAAaF,EAAY5B,QAAUuB,IAErCd,OAAQ,CAAEc,IAAKK,EAAY5B,OAJ7B,SAMG4B,EAAYV,SAPIU,EAAYV,MADlB,MAcnB,qBAAKQ,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACE,UAAQ,aACRK,KAAK,SACLL,UAAU,QACVM,YAAY,SACZhC,MAAOqB,EACPY,SA/BgB,SAACC,IAN3B,SAAuBzB,GACrB,IAAMK,EAASxB,EAAcmB,EAAQG,GAErCQ,EAAgBN,EACjB,CAGCqB,CAAc,CAAEd,MAAOa,EAAME,OAAOpC,OAAS,MAC9C,IAgCO,sBAAM0B,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAK/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SACGX,EAAUY,KAAI,SAAAU,GAAO,OACpB,cAAC,IAAMR,SAAP,UACE,cAAC,EAAD,CACE,UAAQ,UACRH,UAAWI,IAAG,cAAe,CAC3B,UAAWN,EAAUc,SAASD,KAEhC5B,OAAQ,CACNe,UAAWA,EAAUc,SAASD,GAC1Bb,EAAUe,QAAO,SAAAC,GAAW,OAAIA,IAAgBH,CAApB,IADrB,sBAEHb,GAFG,CAEQa,KARvB,SAWGA,KAZgBA,EADD,MAmBxB,qBAAKX,UAAU,mBAAf,SACE,cAAC,EAAD,CACE,UAAQ,aACRA,UAAWI,IAAG,oBAAqB,CACjC,cAAeN,EAAUiB,SAE3BhC,OAAQ,CAAEe,UAAW,MALvB,wBAaN,qBAAKE,UAAU,cAAf,SACE,cAAC,EAAD,CACEA,UAAU,0CACVjB,OAAQ,CACNe,UAAW,KACXD,IAAK,KACLF,MAAO,MALX,mCAaP,EC7GYqB,G,MAAS,kBACpB,qBAAKhB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCITiB,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAC7C,mBAAG,UAAQ,qBAAqBlB,UAAU,kBAA1C,SACGkB,GAF0C,ECJlCC,EAA2B,kBACtC,mBAAG,UAAQ,kBAAX,8CADsC,ECQ3BC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMzB,EAAcwB,EAAdxB,IAAK0B,EAASF,EAATE,KAEnB,OACE,cAAC,IAAD,CACEpC,GAAE,aAAQmC,GACVtB,UAAWI,IAAG,CACZ,kBLhBkB,MKgBCP,IAHvB,SAMG0B,GAGN,ECZYC,EAAmC,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OACzCC,EAASG,cAATH,KAER,OACE,qBACE,UAAQ,SAERtB,UAAWI,IAAG,CACZ,yBAA0BiB,EAAOC,OAASA,IAJ9C,UAOE,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAGtB,6BAAKA,EAAOxB,MACZ,6BAAKwB,EAAOK,OACZ,6BAAKL,EAAOM,OAEZ,6BACGN,EAAOO,OACJ,cAAC,EAAD,CAAYP,OAAQA,EAAOO,SAC3BP,EAAOQ,YNjCS,MMmCtB,6BACGR,EAAOS,OACJ,cAAC,EAAD,CAAYT,OAAQA,EAAOS,SAC3BT,EAAOU,YNtCS,QMiBjBV,EAAOC,KAyBjB,ECrCYU,EAA0B,WACrC,MAAuB/C,cAAhBC,EAAP,oBAEM+C,EAAO/C,EAAaU,IAAI,SAAW,KACnCsC,EAAQhD,EAAaU,IAAI,UAAY,KAErCuC,EAAgB,SAACC,GACrB,OAAIH,IAASG,EACJ,CAAEH,KAAMG,EAAUF,MAAO,MAG9BD,IAASG,GAAaF,EAInB,CAAED,KAAM,KAAMC,MAAO,MAHnB,CAAED,KAAMG,EAAUF,MAAO,OAInC,EAED,OACE,gCACE,+BACG5C,EAAYW,KAAI,SAAAmC,GACf,IAAMC,EAAmBD,EAASE,cAElC,OACE,6BACE,uBAAMtC,UAAU,8BAAhB,UACGoC,EACD,cAAC,EAAD,CACErD,OAAQoD,EAAcE,GADxB,SAGE,sBAAMrC,UAAU,OAAhB,SACE,mBACEA,UAAWI,IAAG,MAAO,UAAW,CAC9B,aAAc6B,IAASI,IAAqBH,EAC5C,eACED,IAASI,GAAoBH,cAXlCE,EAmBZ,IAED,wCACA,4CAIP,EC/CYG,EAAmC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjD,OACE,wBACE,UAAQ,cACRxC,UAAU,uDAFZ,UAIE,cAAC,EAAD,IAEA,gCACGwC,EAAOvC,KAAI,SAACoB,GAAD,OACV,cAAC,EAAD,CAAiBA,OAAQA,GAAaA,EAAOC,KADnC,QAMnB,E,cCrBKmB,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,C,sDAEM,iHAEED,EAAK,KACTK,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,KAJX,4C,sBCPA,IAAMC,EAAwB,kBACnC,wFADmC,ECFzBC,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,YAAYA,EAAZ,UAAYA,EAAZ,YAAYA,EAAZ,YAAYA,CAAZ,MCGO,IAAMC,EAAoB,SAC/Bb,EACA7C,EACAE,EACAC,EACAmC,EACAC,GAEA,IAAIoB,EAAc,YAAOd,GAErB7C,IACF2D,EAAiBA,EAAezC,QAAO,SAAAQ,GAAW,IAAD,IACzCkC,EAAgB5D,EAAM2C,cAEtBkB,EAAenC,EAAOE,KAAKe,cAC9B1B,SAASjB,EAAM2C,eAEZmB,EAAc,UAAGpC,EAAOQ,kBAAV,aAAG,EAAmBS,cACvC1B,SAAS2C,GAENG,EAAc,UAAGrC,EAAOU,kBAAV,aAAG,EAAmBO,cACvC1B,SAAS2C,GAEZ,OAAOC,GAAgBC,GAAkBC,CAC1C,KAGC7D,IACFyD,EAAiBA,EAAezC,QAAO,SAAAQ,GAAM,OAAIA,EAAOxB,MAAQA,CAAnB,KAG3CC,EAAUiB,SACZuC,EAAiBA,EAAezC,QAAO,YAAe,IAAZa,EAAW,EAAXA,KAClCiC,EAAgBC,KAAKC,MAAOnC,EAAO,IAAO,GAEhD,OAAO5B,EAAUc,SAAS+C,EAAc1F,WACzC,KAGH,IAAM6F,ECvCD,SACLC,EACA9B,EACAC,GAEA,IAAI8B,EAAa,YAAOD,GAExB,OAAQ9B,GACN,KAAKmB,EAASa,KACZD,EAAgBA,EACb/B,MAAK,SAACiC,EAAGC,GAAJ,OAAUD,EAAE3C,KAAK6C,cAAcD,EAAE5C,KAAjC,IACR,MAEF,KAAK6B,EAASiB,IACZL,EAAgBA,EACb/B,MAAK,SAACiC,EAAGC,GAAJ,OAAUD,EAAErE,IAAIuE,cAAcD,EAAEtE,IAAhC,IACR,MAEF,KAAKuD,EAASkB,KACZN,EAAgBA,EACb/B,MAAK,SAACiC,EAAGC,GAAJ,OAAUD,EAAExC,KAAOyC,EAAEzC,IAArB,IACR,MAEF,KAAK0B,EAASmB,KACZP,EAAgBA,EACb/B,MAAK,SAACiC,EAAGC,GAAJ,OAAUD,EAAEvC,KAAOwC,EAAExC,IAArB,IAWZ,OAJIO,IACF8B,EAAgBA,EAAcQ,WAGzBR,CACR,CDE4BS,CAAsBnB,EAAgBrB,EAAMC,GAEvE,OAAO4B,CACR,EEhCYY,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOnC,EAAP,KAAeoC,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOzD,EAAP,KAAqB6D,EAArB,KACA,EAAuB9F,cAAhBC,EAAP,oBAEA8F,qBAAU,WACRF,GAAa,GLXV,WAAP,+BKYIG,GACGlC,MAAK,SAACE,GACL2B,ECrBD,SAA8BpC,GACnC,OAAOA,EAAOvC,KAAI,SAAAoB,GAChB,OAAO,2BACFA,GADL,IAEEO,OAAQY,EAAO0C,MAAK,SAAAtD,GAAM,OAAIA,EAAOL,OAASF,EAAOQ,UAA3B,IAC1BC,OAAQU,EAAO0C,MAAK,SAAApD,GAAM,OAAIA,EAAOP,OAASF,EAAOU,UAA3B,KAE7B,GACF,CDaiBoD,CAAqBlC,GAChC,IACAmC,OAAM,WACLL,EAAgB,uBACjB,IACAM,SAAQ,WACPP,GAAa,EACd,GACJ,GAAE,IAEH,IAAMQ,EAAwBpE,IAAiB2D,EACzCU,GAAsB/C,EAAOzB,SAAW8D,IAAc3D,EACtDsE,IAAqBhD,EAAOzB,SAAWG,EAEvCvB,EAAQT,EAAaU,IAAI,UAAY,GACrCC,EAAMX,EAAaU,IAAI,QAAU,GACjCE,EAAYZ,EAAaa,OAAO,cAAgB,GAChDkC,EAAO/C,EAAaU,IAAI,SAAW,GACnCsC,EAAQhD,EAAaU,IAAI,UAAY,GAErC0D,EAAiBD,EACrBb,EACA7C,EACAE,EACAC,EACAmC,EACAC,GAGF,OACE,qCACE,oBAAIlC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACG6E,GAAa,cAAC,EAAD,IAEbS,GACC,cAAC,EAAD,CAAgBpE,aAAcA,IAG/BqE,GAAsB,cAAC,EAAD,KAErBjC,EAAevC,SAAW8D,GAAa,cAAC,EAAD,IAExCW,KAAsBlC,EAAevC,QACjC,cAAC,EAAD,CAAiByB,OAAQc,gBAO3C,EElFYmC,EAAqB,kBAChC,oBAAIzF,UAAU,QAAd,sBADgC,ECArB0F,EAAsB,kBACjC,oBAAI1F,UAAU,QAAd,2BADiC,ECGtB2F,EAAS,WACpB,MAAuB1G,cAAhBC,EAAP,oBAEM0G,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnBzF,IAAG,cAAe,CAChB,8BAA+ByF,GAFd,EAMrB,OACE,qBACE,UAAQ,MACR7F,UAAU,iCACV8F,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK9F,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEb,GAAG,IACHa,UAAW4F,EAFb,kBAOA,cAAC,IAAD,CACEzG,GACE,CACE4G,SAAU,UACV3G,OAAO,IAAD,OAAMF,EAAajB,aAG7B+B,UAAW4F,EAPb,0BAeT,EChCYI,G,MAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMhG,UAAU,UAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAAC,IAAD,CACEA,KAAK,SACLC,QAAS,cAAC,EAAD,QAIb,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU/G,GAAG,IAAIgH,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,aAKlC,GCxBDE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.598f5251.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  paramsToUpdate: SearchParams,\n  currentParams: URLSearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(params, searchParams),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","export const EMPTY_PERSON = '-';\nexport const SEX_FEMALE = 'f';\nexport const CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const SORT_PEOPLE = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n];\n\nexport const SEX_FILTERS = [\n  { label: 'All', value: null },\n  { label: 'Male', value: 'm' },\n  { label: 'Female', value: 'f' },\n];\n","import React from 'react';\nimport cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\nimport { CENTURIES, SEX_FILTERS } from '../utils/variablesHelpers';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || null;\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(params, searchParams);\n\n    setSearchParams(search);\n  }\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value || null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {SEX_FILTERS.map((sexCategory) => (\n          <React.Fragment key={sexCategory.label}>\n            <SearchLink\n              className={cn({\n                'is-active': sexCategory.value === sex,\n              })}\n              params={{ sex: sexCategory.value }}\n            >\n              {sexCategory.label}\n            </SearchLink>\n          </React.Fragment>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map(century => (\n              <React.Fragment key={century}>\n                <SearchLink\n                  data-cy=\"century\"\n                  className={cn('button mr-1', {\n                    'is-info': centuries.includes(century),\n                  })}\n                  params={{\n                    centuries: centuries.includes(century)\n                      ? centuries.filter(currCentury => currCentury !== century)\n                      : [...centuries, century],\n                  }}\n                >\n                  {century}\n                </SearchLink>\n              </React.Fragment>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length,\n              })}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\ninterface Props {\n  errorMessage: string,\n}\n\nexport const ErrorComponent: React.FC<Props> = ({ errorMessage }) => (\n  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    {errorMessage}\n  </p>\n);\n","import React from 'react';\n\nexport const EmptyComponent: React.FC = () => (\n  <p data-cy=\"noPeopleMessage\">\n    There are no people on the server\n  </p>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { SEX_FEMALE } from '../../utils/variablesHelpers';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({\n        'has-text-danger': sex === SEX_FEMALE,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { EMPTY_PERSON } from '../../utils/variablesHelpers';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonComponent: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={cn({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother\n          ? <PersonLink person={person.mother} />\n          : person.motherName || EMPTY_PERSON}\n      </td>\n      <td>\n        {person.father\n          ? <PersonLink person={person.father} />\n          : person.fatherName || EMPTY_PERSON}\n      </td>\n    </tr>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../SearchLink';\nimport { SORT_PEOPLE } from '../../utils/variablesHelpers';\n\nexport const SortComponent: React.FC = () => {\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || null;\n  const order = searchParams.get('order') || null;\n\n  const getSortParams = (category: string) => {\n    if (sort !== category) {\n      return { sort: category, order: null };\n    }\n\n    if (sort === category && !order) {\n      return { sort: category, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  return (\n    <thead>\n      <tr>\n        {SORT_PEOPLE.map(category => {\n          const preparedCategory = category.toLowerCase();\n\n          return (\n            <th key={category}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {category}\n                <SearchLink\n                  params={getSortParams(preparedCategory)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn('fas', 'fa-sort', {\n                        'fa-sort-up': sort === preparedCategory && !order,\n                        'fa-sort-down':\n                          sort === preparedCategory && order,\n                      })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          );\n        })}\n\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonComponent } from '../PersonComponent/PersonComponent';\nimport { SortComponent } from '../SortComponent/SortComponent';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleComponent: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <SortComponent />\n\n      <tbody>\n        {people.map((person) => (\n          <PersonComponent person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\n\nexport const EmptySearch: React.FC = () => (\n  <p>\n    There are no people matching the current search criteria\n  </p>\n);\n","export enum SortType {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { getSortPreparedPeople } from './getSortedPeople';\nimport { Person } from '../types';\n\nexport const getPreparedPeople = (\n  people: Person[],\n  query: string,\n  sex: string,\n  centuries: string[],\n  sort: string,\n  order: string,\n) => {\n  let preparedPeople = [...people];\n\n  if (query) {\n    preparedPeople = preparedPeople.filter(person => {\n      const preparedQuery = query.toLowerCase();\n\n      const filterByName = person.name.toLowerCase()\n        .includes(query.toLowerCase());\n\n      const filterByMother = person.motherName?.toLowerCase()\n        .includes(preparedQuery);\n\n      const filterByFather = person.fatherName?.toLowerCase()\n        .includes(preparedQuery);\n\n      return filterByName || filterByMother || filterByFather;\n    });\n  }\n\n  if (sex) {\n    preparedPeople = preparedPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length) {\n    preparedPeople = preparedPeople.filter(({ born }) => {\n      const personCentury = Math.floor((born / 100) + 1);\n\n      return centuries.includes(personCentury.toString());\n    });\n  }\n\n  const sortPreparedPeople = getSortPreparedPeople(preparedPeople, sort, order);\n\n  return sortPreparedPeople;\n};\n","import { Person } from '../types';\nimport { SortType } from '../types/SortType';\n\nexport function getSortPreparedPeople(\n  prepared: Person[],\n  sort: string,\n  order: string,\n) {\n  let visiblePeople = [...prepared];\n\n  switch (sort) {\n    case SortType.Name:\n      visiblePeople = visiblePeople\n        .sort((a, b) => a.name.localeCompare(b.name));\n      break;\n\n    case SortType.Sex:\n      visiblePeople = visiblePeople\n        .sort((a, b) => a.sex.localeCompare(b.sex));\n      break;\n\n    case SortType.Born:\n      visiblePeople = visiblePeople\n        .sort((a, b) => a.born - b.born);\n      break;\n\n    case SortType.Died:\n      visiblePeople = visiblePeople\n        .sort((a, b) => a.died - b.died);\n      break;\n\n    default:\n      break;\n  }\n\n  if (order) {\n    visiblePeople = visiblePeople.reverse();\n  }\n\n  return visiblePeople;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { ErrorComponent } from '../ErrorComponent/ErrorComponent';\nimport { EmptyComponent } from '../EmptyComponent/EmptyComponent';\nimport { PeopleComponent } from '../PeopleComponent/PeopleComponent';\nimport { getPeople } from '../../api';\nimport { getPreparedPeopleAPI } from '../../utils/PeopleHelpers';\nimport { EmptySearch } from '../EmptySearch/EmptySearch';\nimport { getPreparedPeople } from '../../utils/getPreparedPeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((response) => {\n        setPeople(getPreparedPeopleAPI(response));\n      })\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isDisplayErrorMessage = errorMessage && !isLoading;\n  const isNoPeopleOnServer = !people.length && !isLoading && !errorMessage;\n  const isPeopleOnServer = !!people.length && !errorMessage;\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const preparedPeople = getPreparedPeople(\n    people,\n    query,\n    sex,\n    centuries,\n    sort,\n    order,\n  );\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isDisplayErrorMessage && (\n                <ErrorComponent errorMessage={errorMessage} />\n              )}\n\n              {isNoPeopleOnServer && <EmptyComponent />}\n\n              {!preparedPeople.length && !isLoading && <EmptySearch />}\n\n              {isPeopleOnServer && !!preparedPeople.length\n                && <PeopleComponent people={preparedPeople} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPreparedPeopleAPI(people: Person[]) {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n}\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const ErrorPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import cn from 'classnames';\nimport { NavLink, useSearchParams } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => (\n    cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to={\n              {\n                pathname: '/people',\n                search: `?${searchParams.toString()}`,\n              }\n            }\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/pages/PeoplePage';\nimport { HomePage } from './components/pages/HomePage';\nimport { ErrorPage } from './components/pages/ErrorPage';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\">\n            <Route\n              path=\":slug?\"\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}